#
# Logstash Configuration
#


# Process the CSV files.
input {
  file {
    path => "/local/hernandj/logstash-ingress/**/*.csv"
    start_position => beginning
    # to read from the beginning of file
    sincedb_path => "/dev/null"
  }
}


# Filter the data.
filter {
    csv {
        # Assume comma separator delimiter.
        separator => ","
        # Label each of the columns in the CSV file.
        columns => ["COMPLETE DESCRIPTION", "CATALOG PAGE", "PROMOTION TYPE", "MULTIBUY QTY", "PRICE", "DEPARTMENT/CATEGORY", "VALID START DATE", "ITEM TYPE", "DESCRIPTION", "DETAILS", "VALID END DATE", "PRICE RAW"]
    }

    # Skip over the header in the CSV file.
    if [COMPLETE DESCRIPTION] =~ /(?i)Complete Description/ or [COMPLETE DESCRIPTION] =~ /(?i)BLANK/ {
        drop { }
    }

    mutate {
        convert => {
            # Must tell Elastic search the types of the data.
            "CATALOG PAGE" => "integer"
            "MULTIBUY QTY" => "integer"
            "PRICE" => "float"
        }
    }

    date {
        match => ["VALID START DATE", "yyyy-MM-dd", "yy/MM/dd", "ISO8601"]
    }

    date {
        match => ["VALID END DATE", "yyyy-MM-dd", "yy/MM/dd", "ISO8601"]
    }

    grok {
        match => ["path", "/local/hernandj/logstash-ingress/(?<RETAILER>[^-]+)-(?<LOCATION>[^/]+)/"]
    }

    mutate {
        lowercase => [ "RETAILER", "LOCATION" ]
    }

    # New-York.
    if [LOCATION] =~ /(?i)ny/ {
        mutate {
	    # Lat: 40.7128 N, Lon: 74.0060 W
            add_field => [ "[geoip][location]", -74.0060 ]
            add_field => [ "[geoip][location]",  40.7128 ]
        }
    # Illinois.
    } else if [LOCATION] =~ /(?i)il/ {
        mutate {
	    # Lat: 40.6331 N, Lon: 89.3985 W
            add_field => [ "[geoip][location]", -89.3985 ]
            add_field => [ "[geoip][location]",  40.6331 ]
        }
    # California.
    } else if [LOCATION] =~ /(?i)ca/ {
        mutate {
	    # Lat: 36.7783 N, Lon: 119.4179 W
            add_field => [ "[geoip][location]", -119.4179 ]
            add_field => [ "[geoip][location]",   36.7783 ]
        }
    # Texas.
    } else if [LOCATION] =~ /(?i)tx/ {
        mutate {
	    # Lat: 31.9686 N, Lon: 99.9018 W
            add_field => [ "[geoip][location]", -99.9018 ]
            add_field => [ "[geoip][location]",  31.9686 ]
        }
    # Pennsylvania.
    } else if [LOCATION] =~ /(?i)pa/ {
        mutate {
	    # Lat: 41.2033 N, Lon: 77.1945 W
            add_field => [ "[geoip][location]", -77.1945 ]
            add_field => [ "[geoip][location]",  41.2033 ]
        }
    # Maryland.
    } else if [LOCATION] =~ /(?i)md/ {
        mutate {
	    # Lat: 39.0458 N, Lon: 76.6413 W
            add_field => [ "[geoip][location]", -76.6413 ]
            add_field => [ "[geoip][location]",  39.0458 ]
        }
    # Georgia.
    } else if [LOCATION] =~ /(?i)ga/ {
        mutate {
	    # Lat: 32.1656 N, Lon: 82.9001 W
            add_field => [ "[geoip][location]", -82.9001 ]
            add_field => [ "[geoip][location]",  32.1656 ]
        }
    # Michigan.
    } else if [LOCATION] =~ /(?i)mi/ {
        mutate {
	    # Lat: 44.3148 N, Lon: 85.6024 W
            add_field => [ "[geoip][location]", -85.6024 ]
            add_field => [ "[geoip][location]",  44.3148 ]
        }
    # New Jersey.
    } else if [LOCATION] =~ /(?i)nj/ {
        mutate {
	    # Lat: 40.0583 N, Lon: 74.4057 W
            add_field => [ "[geoip][location]", -74.4057 ]
            add_field => [ "[geoip][location]",  40.0583 ]
        }
    # Florida.
    } else if [LOCATION] =~ /(?i)fl/ {
        mutate {
	    # Lat: 27.6648 N, Lon: 81.5158 W
            add_field => [ "[geoip][location]", -81.5158 ]
            add_field => [ "[geoip][location]",  27.6648 ]
        }
    # Arkansas.
    } else if [LOCATION] =~ /(?i)ar/ {
        mutate {
	    # Lat: 35.2010 N, Lon: 91.8318 W
            add_field => [ "[geoip][location]", -91.8318 ]
            add_field => [ "[geoip][location]",  35.2010 ]
        }
    # Arizona.
    } else if [LOCATION] =~ /(?i)az/ {
        mutate {
	    # Lat: 34.0489 N, Lon: 111.0939 W
            add_field => [ "[geoip][location]", -111.0939 ]
            add_field => [ "[geoip][location]",   34.0489 ]
        }
    # Orlando.
    } else if [LOCATION] =~ /(?i)or/ {
        mutate {
	    # Lat: 45.5231 N, Lon: 122.6765 W
            add_field => [ "[geoip][location]", -122.6765 ]
            add_field => [ "[geoip][location]",   45.5231 ]
        }
    # Washington.
    } else if [LOCATION] =~ /(?i)wa/ {
        mutate {
	    # Lat: 47.6062 N, Lon: 122.3321 W
            add_field => [ "[geoip][location]", -122.3321 ]
            add_field => [ "[geoip][location]",   47.6062 ]
        }
    }

    mutate {
        convert => [ "[geoip][location]", "float" ]
    }

}

# Output the processed data to the cloud.
output {
    stdout { codec => rubydebug }
    elasticsearch {
        # Assume Elasticsearch is running on localhost.
        hosts => ["https://3d2f773564710008b24b983810f4647a.ap-southeast-2.aws.found.io:9243"]
        user => elastic
        password => auY1OIMcmBZHq68YAPYmtwsL
        # All input is loaded with this index.
        index => "logstash-catalytics-%{RETAILER}-%{LOCATION}-%{+YYYY-MM-dd}"
    }
}